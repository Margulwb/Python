{"ast":null,"code":"var _jsxFileName = \"/home/mg/github/python/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles.scss';\nimport StockTable from './components/StockTable';\nimport StockForm from './components/StockForm';\nimport useStockData from './components/useStockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    signals,\n    sellReasons,\n    fetchSellReason,\n    setSignals\n  } = useStockData();\n  const [formData, setFormData] = useState({\n    symbol: '',\n    name: '',\n    shares: 1\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5001/stocks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add stock');\n      }\n      setFormData({\n        symbol: '',\n        name: '',\n        shares: 1\n      });\n\n      // Fetch updated stock list after adding a new stock\n      const updatedResponse = await fetch('http://localhost:5001/stocks');\n      if (!updatedResponse.ok) {\n        throw new Error('Failed to fetch updated stocks');\n      }\n      const updatedData = await updatedResponse.json();\n      setSignals(updatedData.reduce((acc, stock) => {\n        acc[stock.symbol] = {\n          signal: stock.signal.toUpperCase(),\n          name: stock.name,\n          shares: stock.shares,\n          profit: stock.profit\n        };\n        return acc;\n      }, {}));\n    } catch (error) {\n      console.error('Error adding stock:', error);\n    }\n  };\n  const handleDelete = async symbol => {\n    try {\n      const response = await fetch(`http://localhost:5001/stocks/${symbol}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete stock');\n      }\n      // Refresh the stock list after deletion\n      setSignals(prevSignals => {\n        const updatedSignals = {\n          ...prevSignals\n        };\n        delete updatedSignals[symbol];\n        return updatedSignals;\n      });\n    } catch (error) {\n      console.error('Error deleting stock:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-primary text-white text-center py-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stock Signal Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(StockForm, {\n        formData: formData,\n        setFormData: setFormData,\n        setSignals: setSignals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), Object.keys(signals).length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n        signals: signals,\n        sellReasons: sellReasons,\n        fetchSellReason: fetchSellReason,\n        setSignals: setSignals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fcCIWS1nlJ7m7RrZFyFbwIr57Po=\", false, function () {\n  return [useStockData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","StockTable","StockForm","useStockData","jsxDEV","_jsxDEV","App","_s","signals","sellReasons","fetchSellReason","setSignals","formData","setFormData","symbol","name","shares","handleInputChange","e","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","updatedResponse","updatedData","json","reduce","acc","stock","signal","toUpperCase","profit","error","console","handleDelete","prevSignals","updatedSignals","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","_c","$RefreshReg$"],"sources":["/home/mg/github/python/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.scss';\nimport StockTable from './components/StockTable';\nimport StockForm from './components/StockForm';\nimport useStockData from './components/useStockData';\n\nfunction App() {\n    const { signals, sellReasons, fetchSellReason, setSignals } = useStockData();\n    const [formData, setFormData] = useState({ symbol: '', name: '', shares: 1 });\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch('http://localhost:5001/stocks', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(formData),\n            });\n            if (!response.ok) {\n                throw new Error('Failed to add stock');\n            }\n            setFormData({ symbol: '', name: '', shares: 1 });\n\n            // Fetch updated stock list after adding a new stock\n            const updatedResponse = await fetch('http://localhost:5001/stocks');\n            if (!updatedResponse.ok) {\n                throw new Error('Failed to fetch updated stocks');\n            }\n            const updatedData = await updatedResponse.json();\n            setSignals(updatedData.reduce((acc, stock) => {\n                acc[stock.symbol] = {\n                    signal: stock.signal.toUpperCase(),\n                    name: stock.name,\n                    shares: stock.shares,\n                    profit: stock.profit\n                };\n                return acc;\n            }, {}));\n        } catch (error) {\n            console.error('Error adding stock:', error);\n        }\n    };\n\n    const handleDelete = async (symbol) => {\n        try {\n            const response = await fetch(`http://localhost:5001/stocks/${symbol}`, {\n                method: 'DELETE',\n            });\n            if (!response.ok) {\n                throw new Error('Failed to delete stock');\n            }\n            // Refresh the stock list after deletion\n            setSignals((prevSignals) => {\n                const updatedSignals = { ...prevSignals };\n                delete updatedSignals[symbol];\n                return updatedSignals;\n            });\n        } catch (error) {\n            console.error('Error deleting stock:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"bg-primary text-white text-center py-3\">\n                <h1>Stock Signal Dashboard</h1>\n            </header>\n            <main className=\"container mt-4\">\n                <StockForm\n                    formData={formData}\n                    setFormData={setFormData}\n                    setSignals={setSignals}\n                />\n\n                {Object.keys(signals).length > 0 && (\n                    <StockTable\n                        signals={signals}\n                        sellReasons={sellReasons}\n                        fetchSellReason={fetchSellReason}\n                        setSignals={setSignals}\n                    />\n                )}\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}