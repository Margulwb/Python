{"ast":null,"code":"var _jsxFileName = \"/home/mg/github/python/frontend/src/components/StockTable.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useStockData from './useStockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockTable() {\n  _s();\n  const {\n    signals,\n    fetchSellReason\n  } = useStockData();\n  const handleDelete = async symbol => {\n    try {\n      const response = await fetch(`http://localhost:5001/stocks/${symbol}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete stock');\n      }\n      // Refresh the stock list after deletion\n      setSignals(prevSignals => {\n        const updatedSignals = {\n          ...prevSignals\n        };\n        delete updatedSignals[symbol];\n        return updatedSignals;\n      });\n    } catch (error) {\n      console.error('Error deleting stock:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shares\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Signal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Profit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(signals).map(([symbol, {\n          signal,\n          name,\n          shares,\n          profit\n        }], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: name || 'Unknown'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: symbol.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: shares || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: signal === 'SELL' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `signal signal-sell`,\n              title: sellReasons[symbol] || 'Fetching reason...',\n              onMouseEnter: () => {\n                if (!sellReasons[symbol]) fetchSellReason(symbol);\n              },\n              children: signal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `signal ${signal === 'BUY' ? 'signal-buy' : 'signal-hold'}`,\n              children: signal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: profit || '0 PLN'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sellReasons[symbol] || 'Fetching reason...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleDelete(symbol),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(StockTable, \"IE7LRBcv8mNLhU6uvNp/5xFuhos=\", false, function () {\n  return [useStockData];\n});\n_c = StockTable;\nexport default StockTable;\nvar _c;\n$RefreshReg$(_c, \"StockTable\");","map":{"version":3,"names":["React","useStockData","jsxDEV","_jsxDEV","StockTable","_s","signals","fetchSellReason","handleDelete","symbol","response","fetch","method","ok","Error","setSignals","prevSignals","updatedSignals","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","signal","name","shares","profit","index","toUpperCase","title","sellReasons","onMouseEnter","onClick","_c","$RefreshReg$"],"sources":["/home/mg/github/python/frontend/src/components/StockTable.js"],"sourcesContent":["import React from 'react';\nimport useStockData from './useStockData';\n\nfunction StockTable() {\n    const { signals, fetchSellReason } = useStockData();\n\n    const handleDelete = async (symbol) => {\n        try {\n            const response = await fetch(`http://localhost:5001/stocks/${symbol}`, {\n                method: 'DELETE',\n            });\n            if (!response.ok) {\n                throw new Error('Failed to delete stock');\n            }\n            // Refresh the stock list after deletion\n            setSignals((prevSignals) => {\n                const updatedSignals = { ...prevSignals };\n                delete updatedSignals[symbol];\n                return updatedSignals;\n            });\n        } catch (error) {\n            console.error('Error deleting stock:', error);\n        }\n    };\n\n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-striped\">\n                <thead className=\"table-dark\">\n                    <tr>\n                        <th>Full Name</th>\n                        <th>Symbol</th>\n                        <th>Shares</th>\n                        <th>Signal</th>\n                        <th>Profit</th>\n                        <th>Reason</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.entries(signals).map(([symbol, { signal, name, shares, profit }], index) => (\n                        <tr key={index}>\n                            <td>{name || 'Unknown'}</td>\n                            <td>{symbol.toUpperCase()}</td>\n                            <td>{shares || 0}</td>\n                            <td>\n                                {signal === 'SELL' ? (\n                                    <span\n                                        className={`signal signal-sell`}\n                                        title={sellReasons[symbol] || 'Fetching reason...'}\n                                        onMouseEnter={() => {\n                                            if (!sellReasons[symbol]) fetchSellReason(symbol);\n                                        }}\n                                    >\n                                        {signal}\n                                    </span>\n                                ) : (\n                                    <span\n                                        className={`signal ${signal === 'BUY' ? 'signal-buy' : 'signal-hold'}`}\n                                    >\n                                        {signal}\n                                    </span>\n                                )}\n                            </td>\n                            <td>{profit || '0 PLN'}</td>\n                            <td>{sellReasons[symbol] || 'Fetching reason...'}</td>\n                            <td>\n                                <button\n                                    className=\"btn btn-danger btn-sm\"\n                                    onClick={() => handleDelete(symbol)}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default StockTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}