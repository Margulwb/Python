{"ast":null,"code":"var _jsxFileName = \"/home/mg/github/python/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [signals, setSignals] = useState({});\n  useEffect(() => {\n    const fetchSignals = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/signals'); // Adjust the URL if necessary\n        if (!response.ok) {\n          throw new Error('Failed to fetch signals');\n        }\n        const data = await response.json();\n        console.log('Fetched signals:', data); // Log the fetched data\n        setSignals(data);\n      } catch (error) {\n        console.error('Error fetching signals:', error);\n      }\n    };\n    fetchSignals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stock Signal Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: Object.keys(signals).length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(signals).map(([stock, signal], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: stock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), \": \", signal]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading signals...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"NLB/KsI7ArHZkM4S0kEDGZl6hyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","signals","setSignals","fetchSignals","response","fetch","ok","Error","data","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","stock","signal","index","_c","$RefreshReg$"],"sources":["/home/mg/github/python/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n    const [signals, setSignals] = useState({});\n\n    useEffect(() => {\n        const fetchSignals = async () => {\n            try {\n                const response = await fetch('http://localhost:5001/signals'); // Adjust the URL if necessary\n                if (!response.ok) {\n                    throw new Error('Failed to fetch signals');\n                }\n                const data = await response.json();\n                console.log('Fetched signals:', data); // Log the fetched data\n                setSignals(data);\n            } catch (error) {\n                console.error('Error fetching signals:', error);\n            }\n        };\n\n        fetchSignals();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Stock Signal Dashboard</h1>\n            </header>\n            <main>\n                {Object.keys(signals).length > 0 ? (\n                    <ul>\n                        {Object.entries(signals).map(([stock, signal], index) => (\n                            <li key={index}>\n                                <strong>{stock}</strong>: {signal}\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>Loading signals...</p>\n                )}\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;QAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC9C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC,CAAC,CAAC;QACvCN,UAAU,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDT,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBhB,OAAA;MAAAgB,QAAA,eACIhB,OAAA;QAAAgB,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACTpB,OAAA;MAAAgB,QAAA,EACKK,MAAM,CAACC,IAAI,CAACnB,OAAO,CAAC,CAACoB,MAAM,GAAG,CAAC,gBAC5BvB,OAAA;QAAAgB,QAAA,EACKK,MAAM,CAACG,OAAO,CAACrB,OAAO,CAAC,CAACsB,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,MAAM,CAAC,EAAEC,KAAK,kBAChD5B,OAAA;UAAAgB,QAAA,gBACIhB,OAAA;YAAAgB,QAAA,EAASU;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACO,MAAM;QAAA,GAD5BC,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,gBAELpB,OAAA;QAAAgB,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAClB,EAAA,CAzCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}